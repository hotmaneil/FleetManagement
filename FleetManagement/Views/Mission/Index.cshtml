@using ViewModel.Mission
@using System.Web.Configuration;
@model MissionSearchViewModel

@{
    ViewBag.Title = "任務管理首頁";

    string RelativePath = WebConfigurationManager.AppSettings["RelativePath"];
}

@Styles.Render("~/Content/DatepickerCss")

<div class="ui equal width stackable grid">

    <div class="row left aligned">
        <div class="column">
            <div class="ui huge breadcrumb">
                <a class="section">@ViewBag.Title</a>
            </div>
        </div>
    </div>

    <div class="sixteen wide column">
        <div class="ui segment">
            <h3 class="QueryHeader">條件查詢</h3>
            <form id="SearchForm" class="ui form" method="post">

                <div class="two fields">
                    <div class="eight wide field">
                        <label>開始時間</label>
                        <div>
                            <div class="ui input left icon">
                                <i class="calendar icon"></i>
                                @Html.TextBoxFor(model => model.BeginDateTime, new { placeholder = "請輸入開始時間" })
                            </div>
                        </div>
                    </div>

                    <div class="eight wide field">
                        <label>結束時間</label>
                        <div>
                            <div class="ui input left icon">
                                <i class="calendar icon"></i>
                                @Html.TextBoxFor(model => model.EndDateTime, new { placeholder = "請輸入結束時間" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="two fields">
                    <div class="eight wide field">
                        <label>車號</label>
                        @Html.TextBoxFor(model => model.VehicleNumber, new { placeholder = "請輸入車號" })
                    </div>

                    <div class="eight wide field">
                        <label>車主</label>
                        @Html.TextBoxFor(model => model.DriverName, new { placeholder = "請輸入車主" })
                    </div>
                </div>

                <div class="field">
                    <div class="four wide field" style="margin:auto;">
                        <button class="ui custeal button circular fluid" type="submit">查詢</button>
                    </div>
                </div>
            </form>
        </div>

        <div class="row">
            <div class="sixteen wide column">
                <div class="ui top attached segment">
                    <div class="ui stackable grid equal width">

                        <div class="column left aligned">
                            <h3 class="ListHeader">任務明細</h3>
                            <div class="row">
                                <button class="small ui button" id="NoExecuteBtn">
                                    未執行
                                </button>

                                <button class="small ui button" id="ExecuteBtn">
                                    執行中
                                </button>

                                <button class="small ui button" id="FinishedBtn">
                                    已完成
                                </button>

                                <button class="small ui button" id="AllBtn">
                                    全部
                                </button>
                            </div>
                        </div>

                        <div class="column right aligned">

                            <div class="row">
                                <form id="exportForm">
                                    <select class="ui dropdown" id="exportType">
                                        <option value="Excel">Excel</option>
                                        @*<option value="Pdf">Pdf</option>*@
                                    </select>
                                    <button class="ui facebook button" type="submit" id="submitBtn">輸出</button>
                                    @*<button class="ui grey button" type="button" id="PrintBtn">Print</button>*@
                                </form>

                                @using (Html.BeginForm("DownLoadExcel", "Mission", FormMethod.Post, new { @id = "DownLoadExcel" }))
                                {

                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="ui attached segment left aligned">
                    <div id="dataTable">
                        <div class="ui icon blue message">
                            <i class="search icon"></i>
                            <div class="content">
                                <div class="header">
                                    請先輸入查詢條件
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
</div>

<!--圖片 Modal -->
<div class="ui basic modal" id="my-modal">
    <div class="actions">
        <div class="ui red basic cancel inverted button">
            <i class="remove icon"></i>
        </div>
    </div>

    <div class="image content">
        <img class="image" src="~/Content/images/content_4.png" id="modal-img" />
        <div class="description">
            <p></p>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/DatepickerJs")

@section Scripts{

    <script src="~/Content/bower_components/tabularJS/js/tabulator.js"></script>
    <script src="~/Content/bower_components/tabularJS/js/xlsx.full.min.js" type="text/javascript"></script>
    <script src="~/Content/bower_components/pdfmake/build/pdfmake.min.js"></script>
    <script src="~/Content/bower_components/pdfmake/build/vfs_fonts.js"></script>

    <script src="~/Scripts/require.min.js"></script>
    <script>
        requirejs.config({
            baseUrl: '@RelativePath'+'Scripts/Mission',
            name: 'Scripts/Mission',
            out: '~/Scripts/Mission/index.js',
            paths: {
                "tabulator": "../../Content/bower_components/tabularJS/js/tabulator.js",
                "pdfmake": "../../Content/bower_components/pdfmake/build/pdfmake.min",
                "vfs_fonts": "../../Content/bower_components/pdfmake/build/vfs_fonts",
                "sharedfunction": "../Shared/function",
                "sharedmodule": "../Shared/module",
                "sharedtemplete": "../Shared/templete",
                "sharedvfs": "../Shared/vfs",
                "module": "module",
                "service": "service",
                "index": "index"
            }
        });
        require(["index"]);

        var saveResult = '@Html.Raw(TempData["SaveResult"])';
        if (saveResult != '') {
            toastr['success']('儲存成功!');
        }

        $("#BeginDateTime").datepicker({
            dateFormat: "yy/mm/dd"
        });

        $("#EndDateTime").datepicker({
            dateFormat: "yy/mm/dd"
        });
    </script>
}

